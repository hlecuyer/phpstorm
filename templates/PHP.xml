<templateSet group="PHP">
  <template name="getspec" value="function it_returns_$NAME$($PARAM$ $NAME$)&#10;{&#10;    $this-&gt;$NAME$()-&gt;shouldBe($NAME$);&#10;}" description="create phpspec method for getter" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="pc" value="private const $NAME$ = $VALUE$;" description="private constante" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="src" value="function it_throws_exception_when_$ATTR$_is_missing()&#10;{&#10;    $base_source = self::BASE_SOURCE;&#10;    unset($base_source['$ATTR$']);&#10;    &#10;    $this-&gt;beConstructedThrough(&#10;    'fromRawSource',&#10;    [$base_source]&#10;    );&#10;    &#10;    $this-&gt;shouldThrow(\InvalidArgumentException::class)-&gt;duringInstantiation();&#10;}" description="test source" toReformat="false" toShortenFQNames="true">
    <variable name="ATTR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
  <template name="not" value="function it_throws_exception_when_$ARG$_is_not_$REASON$()&#10;{&#10;    $base_source = self::BASE_SOURCE;&#10;    $base_source['$ARG$'] = $VALUE$;&#10;    &#10;    $this-&gt;beConstructedThrough(&#10;        'fromRawSource',&#10;        [$base_source]&#10;    );&#10;    &#10;    $this-&gt;shouldThrow(\InvalidArgumentException::class)-&gt;duringInstantiation();&#10;}" toReformat="false" toShortenFQNames="true">
    <variable name="ARG" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="REASON" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VALUE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="PHP" value="true" />
    </context>
  </template>
</templateSet>